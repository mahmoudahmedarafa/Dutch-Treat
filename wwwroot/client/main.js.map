{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/store.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/Order.ts","./src/app/views/cartView.component.ts","./src/app/views/cartView.component.html","./src/app/views/productListView.component.html","./src/app/views/productListView.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Product } from \"../shared/Product\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Order, OrderItem } from \"../shared/Order\";\r\n\r\n@Injectable()\r\nexport class Store {\r\n  constructor(private http: HttpClient) {\r\n      \r\n  }\r\n\r\n  public products: Product[] = [];\r\n  public order: Order = new Order();\r\n\r\n  loadProducts(): Observable<void> {\r\n      return this.http.get<[]>(\"/api/products\").pipe(map(data => {\r\n          this.products = data;\r\n          return;\r\n      }));\r\n  }\r\n\r\n  addToOrder(product: Product) {\r\n    const newItem = new OrderItem();\r\n\r\n    newItem.product = product;\r\n    newItem.productId = product.id;\r\n    newItem.quantity = 1;\r\n\r\n    this.order.items.push(newItem);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Shop';\n}\n","<div class=\"row\">\r\n  <div class=\"col-9\">\r\n    <h3>{{title}}</h3>\r\n    <product-list></product-list>\r\n  </div>\r\n  <div class=\"col-3\">\r\n    <cart></cart>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ProductListView } from './views/productListView.component';\r\nimport { Store } from './services/store.service';\r\nimport { HttpClientModule } from \"@angular/common/http\"\r\nimport { CartView } from './views/cartView.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProductListView,\r\n    CartView\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [Store],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Product } from \"./Product\"\r\n\r\nexport class Order {\r\n  id: number\r\n  orderDate: string\r\n  orderNumber: string\r\n  items: OrderItem[]\r\n  user: any\r\n}\r\n\r\nexport class OrderItem {\r\n  id: number\r\n  orderId: number\r\n  productId: number\r\n  product: Product\r\n  quantity: number\r\n  unitPrice: number\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n  selector: 'cart',\r\n  templateUrl: 'cartView.component.html',\r\n  styleUrls: []\r\n})\r\nexport class CartView {\r\n  constructor(public store: Store) {\r\n      \r\n  }\r\n}\r\n","<h3>Cart</h3>\r\n<div>Count: {{store.order.items.length}}</div>\r\n<hr />\r\n","<div class=\"row\">\r\n      <div *ngFor=\"let p of store.products\" class=\"col-md-4\">\r\n        <div class=\"border bg-light rounded p-1\">\r\n          <img src=\"/img/{{p.artId}}.jpg\" class=\"img-fluid product-image\" alt={{p.title}} />\r\n          <h5>{{p.category}} - {{p.size}}</h5>\r\n          <ul>\r\n            <li>Price: {{p.price | currency}}</li>\r\n            <li>Artist: {{p.artist}}</li>\r\n            <li>Title: {{p.title}}</li>\r\n            <li>{{p.artDescription}}</li>\r\n          </ul>\r\n          <button id=\"buyButton\" class=\"btn btn-success\"\r\n                  (click)=\"store.addToOrder(p)\">Buy</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n  selector: 'product-list',\r\n  templateUrl: './productListView.component.html',\r\n  styleUrls: ['./productListView.component.css']\r\n})\r\n\r\nexport class ProductListView implements OnInit {\r\n\r\n  constructor(public store: Store) {\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    this.store.loadProducts().subscribe();\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}